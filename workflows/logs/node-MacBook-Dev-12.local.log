[INFO ] 2020-11-18T18:48:24,138Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peterli/Desktop/tokentofriend/workflows ... {}
[INFO ] 2020-11-18T18:48:24,352Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-18T18:48:25,528Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-11-18T18:48:26,678Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-11-18T18:48:26,688Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-11-18T18:48:26,689Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-18T18:48:27,229Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:27,253Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-11-18T18:48:27,735Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:27,746Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:27,746Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-11-18T18:48:27,906Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:27,916Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-18T18:48:28,445Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-11-18T18:48:29,247Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-18T18:48:29,259Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-11-18T18:48:29,279Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-18T18:48:29,290Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-11-18T18:48:29,290Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-11-18T18:48:30,214Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:30,214Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-18T18:48:30,224Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-11-18T18:48:30,234Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-18T18:48:30,234Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-11-18T18:48:30,234Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-18T18:48:30,235Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-11-18T18:48:30,235Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-11-18T18:48:30,476Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:30,476Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-11-18T18:48:30,487Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:30,487Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-11-18T18:48:30,597Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-11-18T18:48:30,597Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:30,761Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:30,772Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:30,772Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:30,772Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:30,782Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:30,795Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:30,795Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:30,795Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:30,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:30,828Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:30,838Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:30,838Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:30,904Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:30,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:30,904Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:30,904Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:30,904Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,178Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,178Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,581Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,581Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,592Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:31,592Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,616Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,616Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,629Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-11-18T18:48:31,714Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,714Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-11-18T18:48:31,724Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,724Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-11-18T18:48:31,724Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,735Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,735Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2020-11-18T18:48:31,736Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,736Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-11-18T18:48:31,747Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,747Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,747Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2020-11-18T18:48:31,748Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,760Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:31,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:31,760Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,760Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,784Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,784Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,784Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,784Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-11-18T18:48:31,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,796Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-11-18T18:48:31,806Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,807Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-11-18T18:48:31,807Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,807Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,807Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,838Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,839Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-11-18T18:48:31,849Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-11-18T18:48:31,862Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:31,862Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-11-18T18:48:31,862Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-11-18T18:48:31,868Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-18T18:48:31,888Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peterli/Desktop/tokentofriend/.gradle {}
[INFO ] 2020-11-18T18:48:31,888Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-11-18T18:48:31,920Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-11-18T18:48:36,841Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps] {}
[INFO ] 2020-11-18T18:48:36,848Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:36,856Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:36,938Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:36,956Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:36,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:37,994Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:38,452Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:38,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:38,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,595Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,596Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,597Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,598Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,599Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:38,599Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,623Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:38,720Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:42,852Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:42,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:42,936Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:45,232Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:45,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:45,485Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:45,490Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:45,625Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:45,676Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:45,689Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:45,690Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:45,694Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:45,726Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:45,832Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:45,856Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:45,873Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:45,883Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:45,962Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:46,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:46,042Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-18T18:48:46,481Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:46,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:46,487Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:46,488Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:46,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:46,497Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps] {}
[INFO ] 2020-11-18T18:48:46,497Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:46,497Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:46,503Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:46,508Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:46,517Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:46,803Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:46,804Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:46,805Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:46,834Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,834Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,834Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,834Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,835Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:46,839Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:47,273Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:47,275Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:47,275Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:47,426Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:47,427Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:47,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:47,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,449Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:47,457Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,465Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:47,465Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:47,465Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:47,469Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,473Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:47,493Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:47,522Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:47,525Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:47,525Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:47,526Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:47,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:47,550Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,550Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:47,551Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:47,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,566Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:47,577Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,577Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:47,577Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:47,577Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:47,586Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps] {}
[INFO ] 2020-11-18T18:48:47,586Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:47,586Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:47,592Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:47,596Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:47,604Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:47,674Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:47,675Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:47,676Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,697Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,698Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:47,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:48,065Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:48,066Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,066Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,228Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,230Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:48,245Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:48,245Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,247Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:48,254Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,262Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:48,268Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:48,268Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:48,272Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,276Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:48,298Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:48,323Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:48,325Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:48,325Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:48,326Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:48,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:48,352Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,352Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:48,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:48,368Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,369Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:48,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:48,380Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:48,388Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,389Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:48,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,397Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:48,397Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:48,397Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:48,406Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps] {}
[INFO ] 2020-11-18T18:48:48,406Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:48,406Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:48,412Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:48,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:48,424Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:48,457Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:48,458Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:48,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,483Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:48,484Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,484Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:48,486Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:48,814Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:48,816Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,816Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,929Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:48,931Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:48,946Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:48,946Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:48,948Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:48,954Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:48,960Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:48,960Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:48,960Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:48,963Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:48,968Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:48,987Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:49,005Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:49,007Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:49,007Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:49,008Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:49,013Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:49,030Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,030Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:49,031Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:49,039Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,039Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:49,049Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,059Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:49,071Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,079Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,086Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,086Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:49,086Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,086Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:49,094Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps] {}
[INFO ] 2020-11-18T18:48:49,094Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:49,094Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:49,099Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:49,103Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:49,111Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:49,146Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:49,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:49,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,174Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:49,515Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:49,517Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:49,517Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:49,641Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:49,642Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:49,658Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:49,658Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,666Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,672Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:49,672Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:49,672Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:49,674Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,678Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:49,697Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:49,715Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:49,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:49,717Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/4/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:49,717Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:49,721Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:49,736Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,737Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:49,737Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:49,745Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,746Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,753Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:49,754Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,763Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,764Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,771Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:49,772Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,780Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,781Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,789Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:49,790Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,798Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:49,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,805Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:49,805Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:49,805Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:49,815Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps] {}
[INFO ] 2020-11-18T18:48:49,815Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:49,815Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:49,820Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:49,823Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:49,829Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:49,857Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:49,858Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:49,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:49,881Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,881Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,882Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:49,884Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:22.458Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:50,196Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:50,198Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:50,198Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:50,316Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:50,318Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:50,334Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:50,334Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,335Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,341Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,347Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:50,348Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:50,348Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:50,351Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,356Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:50,379Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:50,398Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:50,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:50,400Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184822.779-9505576604D498B6/nodes/5/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:50,401Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:50,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:50,425Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,426Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725325485) {}
[INFO ] 2020-11-18T18:48:50,427Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:50,434Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,434Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,442Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725327447) {}
[INFO ] 2020-11-18T18:48:50,443Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,451Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,452Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725328245) {}
[INFO ] 2020-11-18T18:48:50,463Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,473Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,474Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,482Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725328946) {}
[INFO ] 2020-11-18T18:48:50,483Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,491Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,492Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,499Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725329658) {}
[INFO ] 2020-11-18T18:48:50,500Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,511Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:50,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:50,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725330334) {}
[INFO ] 2020-11-18T18:48:50,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:51,178Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77707a66-70e9-47e1-a14e-df63bb9d380a, invocation_id=445dbe7c-a84f-43ad-999e-e70baef7a619, invocation_timestamp=2020-11-18T18:48:50.557Z, origin=Only For Testing, session_id=445dbe7c-a84f-43ad-999e-e70baef7a619, session_timestamp=2020-11-18T18:48:50.557Z, thread-id=896, tx_id=DB6464819C848DBF1F267626B4F8CBE81F14EB1CB626C5E6A542C2DA1BBD8ADE}
[INFO ] 2020-11-18T18:48:51,178Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77707a66-70e9-47e1-a14e-df63bb9d380a, invocation_id=445dbe7c-a84f-43ad-999e-e70baef7a619, invocation_timestamp=2020-11-18T18:48:50.557Z, origin=Only For Testing, session_id=445dbe7c-a84f-43ad-999e-e70baef7a619, session_timestamp=2020-11-18T18:48:50.557Z, thread-id=896, tx_id=DB6464819C848DBF1F267626B4F8CBE81F14EB1CB626C5E6A542C2DA1BBD8ADE}
[INFO ] 2020-11-18T18:48:51,297Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77707a66-70e9-47e1-a14e-df63bb9d380a, invocation_id=445dbe7c-a84f-43ad-999e-e70baef7a619, invocation_timestamp=2020-11-18T18:48:50.557Z, origin=Only For Testing, session_id=445dbe7c-a84f-43ad-999e-e70baef7a619, session_timestamp=2020-11-18T18:48:50.557Z, thread-id=896, tx_id=DB6464819C848DBF1F267626B4F8CBE81F14EB1CB626C5E6A542C2DA1BBD8ADE}
[INFO ] 2020-11-18T18:48:51,297Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=77707a66-70e9-47e1-a14e-df63bb9d380a, invocation_id=445dbe7c-a84f-43ad-999e-e70baef7a619, invocation_timestamp=2020-11-18T18:48:50.557Z, origin=Only For Testing, session_id=445dbe7c-a84f-43ad-999e-e70baef7a619, session_timestamp=2020-11-18T18:48:50.557Z, thread-id=896, tx_id=DB6464819C848DBF1F267626B4F8CBE81F14EB1CB626C5E6A542C2DA1BBD8ADE}
[INFO ] 2020-11-18T18:48:51,406Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2020-11-18T18:48:51,425Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,425Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,427Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2020-11-18T18:48:51,434Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,434Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,436Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2020-11-18T18:48:51,442Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,442Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,443Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2020-11-18T18:48:51,450Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,450Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,451Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2020-11-18T18:48:51,461Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,461Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,462Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2020-11-18T18:48:51,469Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:51,469Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,552Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps] {}
[INFO ] 2020-11-18T18:48:51,552Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:51,552Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:51,557Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:51,561Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:51,567Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:51,600Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:51,601Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:51,602Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,605Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:51,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:52,022Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:52,029Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,029Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,148Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:52,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,153Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:52,173Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,182Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:52,182Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:52,182Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:52,185Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,189Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,212Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:52,232Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:52,234Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:52,234Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/0/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:52,235Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:52,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:52,239Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2020-11-18T18:48:52,255Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,256Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,256Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,256Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,269Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps] {}
[INFO ] 2020-11-18T18:48:52,269Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:52,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:52,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:52,279Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:52,284Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:52,318Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:52,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:52,320Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,341Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,342Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:52,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:52,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:52,694Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,695Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,824Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:52,825Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:52,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:52,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,842Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:52,848Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,853Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:52,853Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:52,853Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:52,857Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,863Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,884Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:52,902Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:52,904Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:52,904Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/1/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:52,904Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:52,909Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:52,925Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,926Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:52,927Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:52,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,935Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:52,941Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,941Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,942Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:52,942Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:52,952Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps] {}
[INFO ] 2020-11-18T18:48:52,953Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:52,953Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:52,958Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:52,971Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:52,977Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:53,007Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:53,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:53,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,032Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:53,355Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:53,357Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:53,357Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:53,482Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:53,483Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:53,498Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:53,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,499Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:53,504Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,510Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:53,510Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:53,510Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:53,513Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,518Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:53,538Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:53,557Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:53,560Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:53,560Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/2/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:53,561Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:53,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:53,581Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,581Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:53,582Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:53,589Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,589Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:53,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:53,597Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:53,604Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,605Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:53,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,614Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:53,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:53,614Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:53,625Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps] {}
[INFO ] 2020-11-18T18:48:53,627Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:53,627Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:53,632Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:53,636Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:53,641Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:53,672Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:53,673Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:53,674Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,699Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:53,701Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:54,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:54,041Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,042Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,137Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,138Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:54,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:54,152Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,153Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,160Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,167Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:54,167Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:54,167Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:54,170Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,173Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,191Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:54,210Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:54,213Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:54,213Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/3/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:54,214Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:54,218Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:54,231Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,231Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:54,231Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:54,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,238Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,243Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:54,244Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,250Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,257Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:54,258Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,266Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,267Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,273Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,273Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,284Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps] {}
[INFO ] 2020-11-18T18:48:54,284Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:54,285Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:54,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:54,293Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:54,306Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:54,337Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:54,337Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:54,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,360Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:54,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:54,657Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:54,659Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,659Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,775Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:54,777Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:54,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:54,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,795Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,801Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,806Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:54,806Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:54,806Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:54,817Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,821Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,843Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:54,865Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:54,868Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:54,868Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/4/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:54,869Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:54,873Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:54,886Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,886Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:54,887Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:54,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,894Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,900Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:54,901Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,907Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,908Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,915Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:54,916Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,923Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,923Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,929Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:54,930Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,936Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,937Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:54,943Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,943Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,943Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:54,943Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:54,951Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps] {}
[INFO ] 2020-11-18T18:48:54,951Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/workflows-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/tokens-contracts-1.2.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/tokens-workflows-1.2.jar, rootPackageName=null) {}
[INFO ] 2020-11-18T18:48:54,951Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/contracts-0.1.jar {}
[INFO ] 2020-11-18T18:48:54,956Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/workflows-0.1.jar {}
[INFO ] 2020-11-18T18:48:54,960Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/tokens-contracts-1.2.jar {}
[INFO ] 2020-11-18T18:48:54,967Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peterli/Desktop/tokentofriend/workflows/build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/tokens-workflows-1.2.jar {}
[INFO ] 2020-11-18T18:48:54,992Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:54,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-11-18T18:48:54,994Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-11-18T18:48:55,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,017Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,018Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1) {}
[INFO ] 2020-11-18T18:48:55,020Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-11-18T18:48:51.472Z
      epoch=1
  } {}
[INFO ] 2020-11-18T18:48:55,347Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-11-18T18:48:55,348Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:55,348Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:55,458Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)] {}
[INFO ] 2020-11-18T18:48:55,459Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-11-18T18:48:55,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-11-18T18:48:55,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,476Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,480Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,485Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-11-18T18:48:55,485Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2020-11-18T18:48:55,485Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2020-11-18T18:48:55,487Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,491Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:55,510Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=C67021F95E9FF6C26EFB903CB8ACB7CACE6CC7DACC65704EF0E2A3B6F63056C1 uploader=app filename=tokenToFriend Contracts {}
[INFO ] 2020-11-18T18:48:55,535Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=34705DC9A2C8599998BBDBA7C3D13609AF04D8B3A772F7134D685ECC926D8320 uploader=app filename=Token SDK Contracts {}
[INFO ] 2020-11-18T18:48:55,538Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultMigratorService Corda service {}
[INFO ] 2020-11-18T18:48:55,538Z [Test worker] cordapp.CordappConfigFileProvider. - Found config for cordapp tokens-workflows-1.2 in build/mock-network/20201118-184851.472-145E795622F91832/nodes/5/cordapps/config/tokens-workflows-1.2.conf {}
[WARN ] 2020-11-18T18:48:55,538Z [Test worker] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions. {}
[INFO ] 2020-11-18T18:48:55,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service {}
[INFO ] 2020-11-18T18:48:55,561Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,561Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=8, serial=1605725332151) {}
[INFO ] 2020-11-18T18:48:55,563Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-11-18T18:48:55,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,572Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=8, serial=1605725332840) {}
[INFO ] 2020-11-18T18:48:55,583Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,591Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,592Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,600Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=8, serial=1605725333498) {}
[INFO ] 2020-11-18T18:48:55,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,609Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,610Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=8, serial=1605725334152) {}
[INFO ] 2020-11-18T18:48:55,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,629Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 4, L=London, C=GB], platformVersion=8, serial=1605725334793) {}
[INFO ] 2020-11-18T18:48:55,637Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 4, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 5, L=London, C=GB {}
[INFO ] 2020-11-18T18:48:55,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:55,653Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 5, L=London, C=GB], platformVersion=8, serial=1605725335475) {}
[INFO ] 2020-11-18T18:48:55,653Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-11-18T18:48:55,780Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=012ad2f2-5fcb-420c-ba22-016e6800d570, invocation_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, invocation_timestamp=2020-11-18T18:48:55.654Z, origin=Only For Testing, session_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, session_timestamp=2020-11-18T18:48:55.654Z, thread-id=1715, tx_id=18BF5D0CF62542B7483CDFC7D558D627D06702CD82F2F5040B92AFF51A3AB6D1}
[INFO ] 2020-11-18T18:48:55,780Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=012ad2f2-5fcb-420c-ba22-016e6800d570, invocation_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, invocation_timestamp=2020-11-18T18:48:55.654Z, origin=Only For Testing, session_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, session_timestamp=2020-11-18T18:48:55.654Z, thread-id=1715, tx_id=18BF5D0CF62542B7483CDFC7D558D627D06702CD82F2F5040B92AFF51A3AB6D1}
[INFO ] 2020-11-18T18:48:55,801Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=012ad2f2-5fcb-420c-ba22-016e6800d570, invocation_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, invocation_timestamp=2020-11-18T18:48:55.654Z, origin=Only For Testing, session_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, session_timestamp=2020-11-18T18:48:55.654Z, thread-id=1715, tx_id=18BF5D0CF62542B7483CDFC7D558D627D06702CD82F2F5040B92AFF51A3AB6D1}
[INFO ] 2020-11-18T18:48:55,801Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=012ad2f2-5fcb-420c-ba22-016e6800d570, invocation_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, invocation_timestamp=2020-11-18T18:48:55.654Z, origin=Only For Testing, session_id=5edb6b53-d5a3-4188-a914-e5e0bf8699f9, session_timestamp=2020-11-18T18:48:55.654Z, thread-id=1715, tx_id=18BF5D0CF62542B7483CDFC7D558D627D06702CD82F2F5040B92AFF51A3AB6D1}
[INFO ] 2020-11-18T18:48:56,219Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:56,344Z [Mock network] corda.flow. - Received a notarisation request for Tx [CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000004, flow-id=57d7317a-7257-4277-bbb2-83bcc11eed25, invocation_id=9791fb5f-886f-42d3-8b13-52a873f0e164, invocation_timestamp=2020-11-18T18:48:56.306Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9791fb5f-886f-42d3-8b13-52a873f0e164, session_timestamp=2020-11-18T18:48:56.306Z, thread-id=1715}
[INFO ] 2020-11-18T18:48:57,090Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 0 input states and 1 references {}
[INFO ] 2020-11-18T18:48:57,118Z [Mock network] corda.flow. - Transaction [CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000004, flow-id=57d7317a-7257-4277-bbb2-83bcc11eed25, invocation_id=9791fb5f-886f-42d3-8b13-52a873f0e164, invocation_timestamp=2020-11-18T18:48:56.306Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9791fb5f-886f-42d3-8b13-52a873f0e164, session_timestamp=2020-11-18T18:48:56.306Z, thread-id=1715}
[INFO ] 2020-11-18T18:48:57,161Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,162Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,168Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,192Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=16324e24-b849-4ef8-84f3-f288ff27191a, invocation_id=9479fa19-41a2-4d7f-b7be-225b46065992, invocation_timestamp=2020-11-18T18:48:56.449Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9479fa19-41a2-4d7f-b7be-225b46065992, session_timestamp=2020-11-18T18:48:56.449Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,262Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=16324e24-b849-4ef8-84f3-f288ff27191a, invocation_id=9479fa19-41a2-4d7f-b7be-225b46065992, invocation_timestamp=2020-11-18T18:48:56.449Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9479fa19-41a2-4d7f-b7be-225b46065992, session_timestamp=2020-11-18T18:48:56.449Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,323Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=16324e24-b849-4ef8-84f3-f288ff27191a, invocation_id=9479fa19-41a2-4d7f-b7be-225b46065992, invocation_timestamp=2020-11-18T18:48:56.449Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9479fa19-41a2-4d7f-b7be-225b46065992, session_timestamp=2020-11-18T18:48:56.449Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,331Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=16324e24-b849-4ef8-84f3-f288ff27191a, invocation_id=9479fa19-41a2-4d7f-b7be-225b46065992, invocation_timestamp=2020-11-18T18:48:56.449Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9479fa19-41a2-4d7f-b7be-225b46065992, session_timestamp=2020-11-18T18:48:56.449Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,340Z [Mock network] corda.flow. - Party O=Mock Company 5, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,340Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=6c79d49c-521d-4107-8bc2-f1f9d1883db6, invocation_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, invocation_timestamp=2020-11-18T18:48:55.818Z, origin=Only For Testing, session_id=b1f9b6f5-d15b-411e-8d4a-fb4c8c79acaa, session_timestamp=2020-11-18T18:48:55.818Z, thread-id=1715, tx_id=CE560D33A6CD319013E464C08E02F97231748B2E19CD9A0670BDC7AA56039484}
[INFO ] 2020-11-18T18:48:57,377Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2020-11-18T18:48:57,388Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,388Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:57,389Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2020-11-18T18:48:57,396Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,396Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:57,397Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-9) {}
[INFO ] 2020-11-18T18:48:57,403Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,403Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:57,405Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-10) {}
[INFO ] 2020-11-18T18:48:57,411Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,411Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:57,413Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-11) {}
[INFO ] 2020-11-18T18:48:57,419Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,419Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2020-11-18T18:48:57,420Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-12) {}
[INFO ] 2020-11-18T18:48:57,427Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2020-11-18T18:48:57,427Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
